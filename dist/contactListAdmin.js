/*! For license information please see contactListAdmin.js.LICENSE.txt */
(()=>{"use strict";var e={"./app/controller/contact-me-list-controller.js":(e,t,a)=>{a.r(t),a.d(t,{ContactMeListController:()=>s});class s{constructor(e,t){this.model=e,this.view=t,this.init()}init(){this.model.getContactMesList().then((e=>{this.onContactListChanged(e)})).catch((e=>{console.error(e)})),this.view.bindDeleteContactMe(this.handleDeleteContactMe),this.view.bindMakeContactMeActive(this.handleUpdateContactMeStatus)}onContactListChanged=e=>{this.view.setUpContactMePage(e)};handleDeleteContactMe=async e=>this.model.deleteContactMeItem(e);handleUpdateContactMeStatus=async e=>this.model.updateActiveContactMe(e)}},"./app/model/base-models/base-model.js":(e,t,a)=>{a.r(t),a.d(t,{BaseModel:()=>s});class s{constructor(e){this.baseUrl=e}async getList(){return new Promise(((e,t)=>{fetch(this.baseUrl,{credentials:"include"}).then((a=>{Promise.all([a.json(),a.status]).then((([a,s])=>{200===s?e(a):(console.log(err),t(`Failed with response ${s}`))})).catch((e=>{console.log(e),t(`Failed response: ${e}`)}))})).catch((e=>{console.log(e),t("Failed to fetch")}))}))}async getListByTag(e){return new Promise(((t,a)=>{fetch(`${this.baseUrl}/tags/${encodeURIComponent(e)}`).then((e=>{Promise.all([e.json(),e.status]).then((([e,s])=>{200===s?t(e):a(`Failed with response ${s}`)})).catch((e=>{a(`Failed response: ${e}`)}))})).catch((e=>a("Failed to fetch")))}))}async getListItemById(e,t){return new Promise(((a,s)=>{fetch(`${this.baseUrl}/${e}/${t}`,{credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,t])=>{200===t?a(e):s(`Failed with response ${t}`)})).catch((e=>{s("Failed response")}))})).catch((()=>s("Failed to fetch id")))}))}async createItem(e){const t={doc:e},a={method:"POST",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((e,t)=>{fetch(this.baseUrl,a).then((a=>{Promise.all([a.text(),a.status]).then((([a,s])=>{200===s?e("Success"):t(`Failed with response ${s}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async createFileItem(e,t){const a=new FormData;a.append("file",e),a.append("doc",JSON.stringify(t));const s={method:"POST",credentials:"include",body:a};return new Promise(((e,t)=>{fetch(this.baseUrl,s).then((a=>{Promise.all([a.text(),a.status]).then((([a,s])=>{200===s?e("Success"):t(`Failed with response ${s}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async updateFileItemObject(e,t){const a=new FormData;a.append("file",e),a.append("doc",JSON.stringify(t));const s={method:"PUT",body:a,credentials:"include"};return new Promise(((e,a)=>{fetch(`${this.baseUrl}/${t.id}`,s).then((t=>{Promise.all([t.text(),t.status]).then((([t,s])=>{200===s?e("Success"):a(`Failed with response ${s}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),a("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),a("Failed response.")}))}))}async updateItem(e){const t={doc:e},a={method:"PUT",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((t,s)=>{fetch(`${this.baseUrl}/${e.id}`,a).then((e=>{Promise.all([e.text(),e.status]).then((([e,a])=>{200===a?t("Success"):(console.error(`ERROR LEVEL 2: ${e}`),s(`Failed with response ${a}`))})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),s("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),s("Failed response.")}))}))}async updateItemStatus(e){return new Promise(((t,a)=>{fetch(`${this.baseUrl}/set-active/${e}`,{method:"PUT",credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,s])=>{200===s?t("Success"):a(`Failed with response ${s}`)})).catch((e=>{a("Failed response")}))})).catch((e=>{a("Failed")}))}))}async deleteItem(e){return new Promise(((t,a)=>{fetch(`${this.baseUrl}/${e}`,{method:"DELETE",credentials:"include"}).then((e=>{Promise.all([e.text(),e.status]).then((([e,s])=>{200===s?t("Success"):a(`Failed with response ${s}`)})).catch((e=>{a("Failed response")}))})).catch((e=>{a("Failed to delete text")}))}))}}},"./app/model/base-models/contact-me-model.js":(e,t,a)=>{a.r(t),a.d(t,{ContactMeModel:()=>c});var s=a("./app/model/base-models/base-model.js");class c{constructor(){this.baseModel=new s.BaseModel("https://api.ngacho.com/database/contact-me-texts")}async fetchContactMeList(){return this.baseModel.getList()}async fetchActiveContactMe(){let e=await this.baseModel.getList();return new Promise(((t,a)=>{let s=e.filter((e=>!0===e.active));s.length>0?t(s[0]):a("No active contact me found")}))}async fetchContactMe(e,t=!1){return this.baseModel.getListItemById(e,t)}async updateContactMeStatus(e){return this.baseModel.updateItemStatus(e)}async deleteContactMeText(e){return this.baseModel.deleteItem(e)}async updateContactMeText(e){return this.baseModel.updateItem(e)}async postContactMeText(e){return this.baseModel.createItem(e)}}},"./app/model/contact-me-list-model.js":(e,t,a)=>{a.r(t),a.d(t,{ContactMeListModel:()=>c});var s=a("./app/model/base-models/contact-me-model.js");class c extends s.ContactMeModel{constructor(){super()}async getContactMesList(){return this.fetchContactMeList()}async deleteContactMeItem(e){return this.deleteContactMeText(e)}async updateActiveContactMe(e){return this.updateContactMeStatus(e)}}},"./app/view/contact-me/admin/contact-me-list-view.js":(e,t,a)=>{a.r(t),a.d(t,{ContactMeListView:()=>s});class s{constructor(){this.contactMeGallery=document.querySelector(".contact-me-gallery")}setUpContactMePage(e){for(const s of e){let e=s.id;const c=document.createElement("div");c.className="contact-me-item-wrapper";const n=document.createElement("div");n.className="contact-me-item";const o=document.createElement("h3");o.className="contact-me-title";var t=document.createTextNode(s.title);o.onclick=function(){location.href=`/admin/edit-contact-me/?${e}`},o.appendChild(t);const l=document.createElement("p");l.className="contact-me-text";var a=document.createTextNode(s.text);l.appendChild(a);const r=document.createElement("div");r.className="icons-wrapper";const i=document.createElement("i");i.className=`fa-solid fa-circle-check activate-${e}`,s.active&&(i.className+=" active");const d=document.createElement("i");d.className=`fa-solid fa-trash delete-${e}`,r.appendChild(i),r.appendChild(d),n.appendChild(o),n.appendChild(l),c.appendChild(n),c.appendChild(r),this.contactMeGallery.appendChild(c)}}bindMakeContactMeActive(e){this.contactMeGallery.addEventListener("click",(t=>{if(t.target&&"I"==t.target.nodeName&&t.target.className.includes("fa-circle-check")&&!t.target.className.includes("active")){const a=t.target.className.replace("fa-solid fa-circle-check activate-","");e(a).then((e=>{this.activateNewlySelectedTag(a),console.log("success")})).catch((e=>{console.error(e)}))}}))}activateNewlySelectedTag(e){var t=this.contactMeGallery.getElementsByClassName("fa-circle-check");for(const a of t){const t=a.className.replace("fa-solid fa-circle-check activate-","");a.className=a.className.replace("active",""),e===t&&(a.className+=" active")}}bindDeleteContactMe(e){this.contactMeGallery.addEventListener("click",(t=>{if(t.target&&"I"==t.target.nodeName&&t.target.className.includes("fa-trash")){const a=t.target.className.replace("fa-solid fa-trash delete-","");e(a).then((e=>{console.log("success")})).catch((e=>{console.error(e)}))}}))}}}},t={};function a(s){var c=t[s];if(void 0!==c)return c.exports;var n=t[s]={exports:{}};return e[s](n,n.exports,a),n.exports}a.d=(e,t)=>{for(var s in t)a.o(t,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{a.r(s);var e=a("./app/controller/contact-me-list-controller.js"),t=a("./app/model/contact-me-list-model.js"),c=a("./app/view/contact-me/admin/contact-me-list-view.js");new e.ContactMeListController(new t.ContactMeListModel,new c.ContactMeListView)})()})();
//# sourceMappingURL=contactListAdmin.js.map