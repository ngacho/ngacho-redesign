{"version":3,"file":"blogListAdmin.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/blogs-to-edit-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/blog-model.js","webpack://ngacho-new/./app/model/blogs-to-edit-model.js","webpack://ngacho-new/./app/view/blog/admin/blogs-to-edit-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/blogs-to-edit-app.js"],"sourcesContent":["export class BlogsToEditController {\n\n    constructor(blogListModel, blogListView) {\n        this.model = blogListModel;\n        this.view = blogListView;\n\n        this.init();\n    }\n\n    init() {\n        // Display initial todos\n        this.model.getBlogList().then((blogData) => {\n            this.onBlogListChanged(blogData);\n        });\n\n        this.view.bindDeleteBlog(this.handleDeleteBlog);\n    }\n\n    onBlogListChanged = (blogs) => {\n        this.view.displayBlogs(blogs);\n    }\n\n    handleDeleteBlog = async (blogId) => this.model.deleteBlog(blogId);\n\n\n}","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class BlogModel {\n\n    /**\n     * getBlogs\n     * deleteBlogById\n     * editBlog\n     * addBlog\n     */\n    constructor() {\n        this.baseModel = new BaseModel(\"https://api.ngacho.com/database/blogs\");\n    }\n\n    // pass me a new blog. I'll modify the id\n    async addBlog(blog) {\n        return this.baseModel.createItem(blog);\n    }\n\n    // pass me an edited blog, it should have a blog id.\n    async editBlog(editedBlog) {\n        return this.baseModel.updateItem(editedBlog);\n    }\n\n    async getBlogs() {\n        return this.baseModel.getList();\n    }\n\n    // singular blog raw vs ssr\n    async getBlog(blogId, serverSideRendering = false) {\n        return this.baseModel.getListItemById(blogId, serverSideRendering);\n    }\n\n    async deleteBlogById(blogId) {\n        return this.baseModel.deleteItem(blogId);\n    }\n\n    // filter blog by tags.\n    async getBlogsByTags(tag) {\n        return this.baseModel.getListByTag(tag);\n    }\n\n}\n","import { BlogModel } from \"./base-models/blog-model.js\";\n\nexport class BlogsToEditModel extends BlogModel {\n\n    constructor() {\n        super();\n        this.blogList = [];\n    }\n\n\n    async getBlogList(){\n        var blogList = await this.getBlogs();\n        return blogList;\n    }\n\n    async deleteBlog(id){\n        var hasBlogBeenDeleted = await this.deleteBlogById(id);\n        return hasBlogBeenDeleted;\n    }\n}","export class BlogsToEditView {\n\n    constructor() {\n        this.blogs_wrapper = document.querySelector(\".table-body\");\n    }\n\n    displayBlogs(posts) {\n        if (!posts) {\n            // you have no blogs yet, add a new blog?\n\n        } else {\n            for (const post of posts) {\n                // Your existing code unmodified...\n                var blog_item = document.createElement('tr');\n                blog_item.className = 'blog-item .new-item';\n                blog_item.id = post[\"id\"];\n\n                var blog_time_cell = document.createElement('td');\n                blog_time_cell.className = \"blog-time-cell\";\n\n                var time_item = document.createElement('time');\n                time_item.className = 'last-edit-date';\n                var last_pub_date = post[\"lastModified\"] || post[\"publishedAt\"];\n                var time = document.createTextNode(last_pub_date);\n                time_item.appendChild(time);\n                blog_time_cell.appendChild(time_item);\n\n\n                var blog_title_cell = document.createElement('td');\n                blog_title_cell.className = \"blog-title-cell\";\n\n                var post_title = document.createElement('p');\n                post_title.className = 'blog-title';\n                var title = document.createTextNode(post[\"title\"]);\n                post_title.appendChild(title);\n                blog_title_cell.appendChild(post_title);\n\n                post_title.addEventListener('click', function () {\n                    location.href = `/admin/edit-blog/?${post[\"id\"]}`;\n                });\n\n                var blog_delete_icon_cell = document.createElement('td');\n                blog_delete_icon_cell.className = 'blog-delete-icon-cell'\n\n                var trash_element = document.createElement('a');\n                var trash_icon = document.createElement('i');\n                trash_icon.className = 'fa fa-trash';\n                trash_icon.id = `fa-fa-trash-delete-${post[\"id\"]}`\n                trash_icon.style = 'color: rgba(153, 15, 2, 1)';\n                trash_icon.ariaHidden = true;\n\n\n                trash_element.appendChild(trash_icon);\n                blog_delete_icon_cell.appendChild(trash_element);\n\n                // append all elements to the div\n                blog_item.appendChild(blog_time_cell);\n                blog_item.appendChild(blog_title_cell);\n                blog_item.appendChild(blog_delete_icon_cell);\n\n                // append the blog item to the blog wrappers.\n                this.blogs_wrapper.appendChild(blog_item);\n            }\n\n        }\n    }\n\n\n\n    bindDeleteBlog(handler) {\n        this.blogs_wrapper.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I') {\n                const blogId = e.target.id;\n                const id = blogId.replace('fa-fa-trash-delete-', '');\n                var status = handler(id);\n                status.then((_) => {\n                    var row = document.getElementById(id);\n                    // toggle hide animation.\n                    row.classList.toggle('hide');\n                    setTimeout(() => {\n                        // remove the row after timeout.\n                        var table = row.parentNode;\n                        while (table && table.tagName != 'TABLE')\n                            table = table.parentNode;\n                        if (!table)\n                            return;\n                        table.deleteRow(row.rowIndex);\n                    }, 1500);\n                }).catch((err) => {\n                    console.log('Deleting blog error ' + err);\n                });\n            }\n        });\n\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BlogsToEditController } from \"./controller/blogs-to-edit-controller.js\";\nimport { BlogsToEditView } from \"./view/blog/admin/blogs-to-edit-view.js\";\nimport { BlogsToEditModel } from \"./model/blogs-to-edit-model.js\";\n\nconst app = new BlogsToEditController(new BlogsToEditModel(), new BlogsToEditView());"],"names":["BlogsToEditController","constructor","blogListModel","blogListView","this","model","view","init","getBlogList","then","blogData","onBlogListChanged","bindDeleteBlog","handleDeleteBlog","blogs","displayBlogs","async","blogId","deleteBlog","BaseModel","baseUrl","Promise","resolve","reject","fetch","credentials","response","all","json","status","data","console","log","err","catch","tag","encodeURIComponent","id","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","error","file","itemObject","formData","FormData","append","BlogModel","baseModel","blog","createItem","editedBlog","updateItem","getList","getListItemById","deleteItem","getListByTag","BlogsToEditModel","super","blogList","getBlogs","deleteBlogById","BlogsToEditView","blogs_wrapper","document","querySelector","posts","post","blog_item","createElement","className","blog_time_cell","time_item","last_pub_date","time","createTextNode","appendChild","blog_title_cell","post_title","title","addEventListener","location","href","blog_delete_icon_cell","trash_element","trash_icon","style","ariaHidden","handler","e","target","nodeName","replace","row","getElementById","classList","toggle","setTimeout","table","parentNode","tagName","deleteRow","rowIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}