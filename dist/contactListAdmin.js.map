{"version":3,"file":"contactListAdmin.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/contact-me-list-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/contact-me-model.js","webpack://ngacho-new/./app/model/contact-me-list-model.js","webpack://ngacho-new/./app/view/contact-me/admin/contact-me-list-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/contact-me-list-app.js"],"sourcesContent":["\n\nexport class ContactMeListController{\n    constructor(model, view){\n        this.model = model;\n        this.view = view;\n\n        this.init();\n    }\n\n    init(){\n        this.model.getContactMesList().then((contactMeList) => {\n            this.onContactListChanged(contactMeList);\n        }).catch((err)=>{\n            console.error(err);\n        });\n\n        this.view.bindDeleteContactMe(this.handleDeleteContactMe);\n        this.view.bindMakeContactMeActive(this.handleUpdateContactMeStatus);\n\n    }\n\n\n    onContactListChanged = (contactMeList) => {\n        this.view.setUpContactMePage(contactMeList);\n    }\n\n\n\n    handleDeleteContactMe = async(contactMeId) => this.model.deleteContactMeItem(contactMeId);\n    handleUpdateContactMeStatus = async(contactMeId) => this.model.updateActiveContactMe(contactMeId);\n    \n\n}","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class ContactMeModel {\n\n    constructor() {\n        this.baseModel = new BaseModel('https://api.ngacho.com/database/contact-me-texts');\n    }\n\n    async fetchContactMeList() {\n        return this.baseModel.getList();\n    }\n\n    async fetchActiveContactMe() {\n        let contactMeList = await this.baseModel.getList();\n        return new Promise((resolve, reject) => {\n            let activeContactMeList = contactMeList.filter(contactMe => contactMe.active === true);\n            if (activeContactMeList.length > 0) {\n                resolve(activeContactMeList[0]);\n            } else {\n                reject(\"No active contact me found\");\n            }\n        });\n\n    }\n\n    async fetchContactMe(contactMeId, serverSideRendering = false) {\n        return this.baseModel.getListItemById(contactMeId, serverSideRendering);\n    }\n\n\n    async updateContactMeStatus(contactMeId) {\n        return this.baseModel.updateItemStatus(contactMeId);\n    }\n\n    async deleteContactMeText(contactMeId) {\n        return this.baseModel.deleteItem(contactMeId);\n    }\n\n\n    async updateContactMeText(contactMeContents){\n        return this.baseModel.updateItem(contactMeContents);\n    }\n\n\n\n    async postContactMeText(contactMeContents) {\n        return this.baseModel.createItem(contactMeContents);\n\n    }\n}","import { ContactMeModel } from \"./base-models/contact-me-model.js\";\n\nexport class ContactMeListModel extends ContactMeModel {\n    constructor() {\n        super();\n    }\n\n    async getContactMesList() {\n        const getListRef = this.fetchContactMeList();\n        return getListRef\n    }\n\n    async deleteContactMeItem(contactMeId) {\n        const deleteRef = this.deleteContactMeText(contactMeId);\n        return deleteRef;\n    }\n\n\n    async updateActiveContactMe(contactMeId) {\n        const updateRef = this.updateContactMeStatus(contactMeId);\n        return updateRef;\n    }\n\n}","export class ContactMeListView {\n    constructor() {\n\n        this.contactMeGallery = document.querySelector(\".contact-me-gallery\");\n\n    }\n\n\n    setUpContactMePage(contactMes) {\n        for (const contactMe of contactMes) {\n            let id = contactMe['id'];\n            const contactMeItemWrapper = document.createElement('div');\n            contactMeItemWrapper.className = \"contact-me-item-wrapper\";\n\n            const contactMeItem = document.createElement('div');\n            contactMeItem.className = \"contact-me-item\";\n\n            const contactMeTitle = document.createElement('h3');\n            contactMeTitle.className = \"contact-me-title\"\n            var title = document.createTextNode(contactMe['title']);\n            contactMeTitle.onclick = function () {\n                location.href =  `/admin/edit-contact-me/?${id}`;\n            }\n            contactMeTitle.appendChild(title);\n\n            const contactMeText = document.createElement('p');\n            contactMeText.className = \"contact-me-text\";\n            var text = document.createTextNode(contactMe['text']);\n            contactMeText.appendChild(text);\n            \n\n            const iconsWrapper = document.createElement('div');\n            iconsWrapper.className = \"icons-wrapper\";\n\n            \n\n            const checkMark = document.createElement('i');\n            checkMark.className = `fa-solid fa-circle-check activate-${id}`;\n\n            if (contactMe['active']) {\n                checkMark.className += \" active\";\n            }\n\n            const deleteMark = document.createElement('i');\n            deleteMark.className = `fa-solid fa-trash delete-${id}`;\n\n            iconsWrapper.appendChild(checkMark);\n            iconsWrapper.appendChild(deleteMark);\n\n\n\n\n            contactMeItem.appendChild(contactMeTitle);\n            contactMeItem.appendChild(contactMeText);\n\n            contactMeItemWrapper.appendChild(contactMeItem);\n            contactMeItemWrapper.appendChild(iconsWrapper);\n\n\n            this.contactMeGallery.appendChild(contactMeItemWrapper);\n\n\n        }\n    }\n\n\n    bindMakeContactMeActive(handler) {\n        this.contactMeGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes('fa-circle-check')) {\n                if (!e.target.className.includes(\"active\")) {\n                    const id = e.target.className.replace(\"fa-solid fa-circle-check activate-\", '');\n                    var status = handler(id);\n                    status.then((_) => {\n                        this.activateNewlySelectedTag(id);\n                        console.log(\"success\");\n                    }).catch((err) => {\n                        console.error(err)\n                    });\n                }\n            }\n        });\n    }\n\n    activateNewlySelectedTag(id){\n        var checkMarks = this.contactMeGallery.getElementsByClassName('fa-circle-check');\n        for(const checkMark of checkMarks){\n            const checkMarkId = checkMark.className.replace(\"fa-solid fa-circle-check activate-\", '');\n            checkMark.className = checkMark.className.replace('active', '')\n            if(id === checkMarkId){\n                checkMark.className += \" active\"\n            }\n\n        }\n    }\n\n    bindDeleteContactMe(handler) {\n        this.contactMeGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes(\"fa-trash\")) {\n\n                const id = e.target.className.replace(\"fa-solid fa-trash delete-\", '');\n\n\n                var status = handler(id);\n                status.then((_) => {\n                    console.log(\"success\");\n                }).catch((err) => {\n                    console.error(err)\n                })\n\n            }\n        });\n    }\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ContactMeListController } from \"./controller/contact-me-list-controller.js\"\nimport { ContactMeListModel } from \"./model/contact-me-list-model.js\"\nimport { ContactMeListView } from \"./view/contact-me/admin/contact-me-list-view.js\";\n\n\nconst app = new ContactMeListController(new ContactMeListModel(), new ContactMeListView())"],"names":["ContactMeListController","constructor","model","view","this","init","getContactMesList","then","contactMeList","onContactListChanged","catch","err","console","error","bindDeleteContactMe","handleDeleteContactMe","bindMakeContactMeActive","handleUpdateContactMeStatus","setUpContactMePage","async","contactMeId","deleteContactMeItem","updateActiveContactMe","BaseModel","baseUrl","Promise","resolve","reject","fetch","credentials","response","all","json","status","data","log","tag","encodeURIComponent","id","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","file","itemObject","formData","FormData","append","ContactMeModel","baseModel","getList","activeContactMeList","filter","contactMe","active","length","getListItemById","updateItemStatus","deleteItem","contactMeContents","updateItem","createItem","ContactMeListModel","super","fetchContactMeList","deleteContactMeText","updateContactMeStatus","ContactMeListView","contactMeGallery","document","querySelector","contactMes","contactMeItemWrapper","createElement","className","contactMeItem","contactMeTitle","title","createTextNode","onclick","location","href","appendChild","contactMeText","iconsWrapper","checkMark","deleteMark","handler","addEventListener","e","target","nodeName","includes","replace","activateNewlySelectedTag","checkMarks","getElementsByClassName","checkMarkId","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}