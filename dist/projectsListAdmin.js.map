{"version":3,"file":"projectsListAdmin.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/view-project-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/projects-model.js","webpack://ngacho-new/./app/model/view-project-model.js","webpack://ngacho-new/./app/view/projects/admin/view-project-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/view-project-app.js"],"sourcesContent":["\n\nexport class ViewProjectController{\n \n    constructor(viewProjectModel, viewProjectView){\n        this.model = viewProjectModel;\n        this.view = viewProjectView;\n        this.init();\n    }\n\n    init(){\n        // Display initial projects\n        this.model.getProjects().then((projects) => {\n            this.onProjectListChanged(projects);\n        });\n\n        this.view.bindDeleteProject(this.handleDeleteProject);\n        this.view.bindEditProject(this.handleEditProject);\n        \n    }\n\n    onProjectListChanged = (projects) => {\n        this.view.displayProjects(projects);\n    }\n\n    handleDeleteProject = async (id) => this.model.deleteProjectFromDB(id);\n\n    handleEditProject = async (projectData) => this.model.editProject(projectData);\n}","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class ProjectBaseModel {\n\n    constructor() { \n        this.baseModel = new BaseModel(\"https://api.ngacho.com/database/projects\");\n    }\n    \n\n\n    async fetchProjects() {\n        return this.baseModel.getList();\n        \n    }\n\n    async fetchProjectById(id, serverSideRendering = false) {\n        return this.baseModel.getListItemById(id, serverSideRendering);\n    }\n\n    async deleteProject(id){\n        return this.baseModel.deleteItem(id);\n\n    }\n\n\n    async updateProjectWithFile(file, bioObject){\n        return this.baseModel.updateFileItemObject(file, bioObject);\n    }\n\n    async updateProject(bioObject){\n        return this.baseModel.updateItem(bioObject);\n    }\n\n    async publishProject(file, bioObject){\n        return this.baseModel.createFileItem(file, bioObject);\n    }\n\n\n}","import { ProjectBaseModel } from \"./base-models/projects-model.js\";\n\nexport class ViewProjectModel extends ProjectBaseModel {\n    constructor(){\n        super();\n    }\n\n    async deleteProjectFromDB(projectData){   \n        var deleteProjectStatus = await this.deleteProject(projectData);\n        return deleteProjectStatus;\n    }\n\n\n    async getProjects(){\n        var projects = await this.fetchProjects();\n        return projects;\n    }  \n}","\nexport class ViewProjectView{\n\n    constructor(){\n        this.projectGallery = document.querySelector(\".project-gallery\");\n\n    }\n\n\n\n    displayProjects(projects){\n        for (const project of projects) {\n            const projectId = project[\"id\"];\n            const projectTitle = project[\"title\"]\n            const projectCoverUrl = project[\"publicUrl\"];\n\n\n            // create the parent item\n            var project_gallery_item = document.createElement('div');\n            project_gallery_item.id = projectId;\n            project_gallery_item.className = 'project-gallery-item';\n            project_gallery_item.tabIndex = 0;\n\n            //  create figure element\n            var img_figure = document.createElement('figure');\n            // create img, append src, create alt.\n            var project_poster = document.createElement('img');\n            project_poster.className = \"project-gallery-image\"\n            project_poster.src = projectCoverUrl;\n            project_poster.alt = `photo of ${projectTitle}`\n            // put image in figure element\n            img_figure.appendChild(project_poster);\n\n            // create the actions div\n            var project_gallery_item_actions = document.createElement('div');\n            project_gallery_item_actions.className = \"project-gallery-item-actions\";\n\n            // create the actions as an unordered list\n            var list = document.createElement('ul');\n\n            var edit_list_item = document.createElement('li');\n            edit_list_item.className = \"project-gallery-item-edit\"\n\n            var edit_button = document.createElement('i');\n            edit_button.className = `fas fa-pen ${project['projectCoverTitle']}`\n            edit_button.id = `edit ${projectId}`;\n            edit_button.ariaHidden = true;\n            edit_list_item.appendChild(edit_button);\n            \n            var delete_list_item = document.createElement('li');\n            delete_list_item.className = \"project-gallery-item-delete\"\n\n            var delete_button = document.createElement('i');\n            delete_button.className = `fas fa-trash ${project['projectCoverTitle']}`;\n            delete_button.id = `delete ${projectId}`;\n            delete_button.ariaHidden = true;\n            delete_list_item.appendChild(delete_button);\n\n            // append each item to list, then append list to actions div\n            list.appendChild(edit_list_item);\n            list.appendChild(delete_list_item);\n            project_gallery_item_actions.appendChild(list);\n            \n            // append image figure, actions to parent div\n            project_gallery_item.appendChild(img_figure);\n            project_gallery_item.appendChild(project_gallery_item_actions); \n            \n            this.projectGallery.appendChild(project_gallery_item);\n        \n        }\n\n    }\n\n    bindDeleteProject(handler) {\n\n        this.projectGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes(\"fas fa-trash\")) {\n                const projectCoverTitle = e.target.className.replace(\"fas fa-trash\", '');\n                const projectId = e.target.id.replace(\"delete \", '');\n\n                const gallery_item = e.target.parentNode.parentNode.parentNode.parentNode;\n                const projectImageUrl = gallery_item.children[0].children[0].src;            \n\n                var deleteStatus = handler(projectId);\n                deleteStatus.then((_)=>{\n                    const gallery_item = document.getElementById(projectId);\n                    gallery_item.classList.toggle('hide');\n                    setTimeout(() => {\n                        // remove the item after timeout.\n                        gallery_item.remove();\n                        \n                    }, 1500);\n                    console.log(\"deleted successfully\")\n                }).catch((err)=>{\n                    console.log(\"Failed to delete\");\n                    console.log(err);\n\n                })\n                \n            }\n        });\n\n    }\n\n    bindEditProject(handler){\n        this.projectGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes(\"fas fa-pen \")) {\n                const projectId = e.target.id.replace(\"edit \", '');\n                location.href = `/admin/edit-project/?${projectId}`;\n            }\n        });\n    }\n    \n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ViewProjectView } from \"./view/projects/admin/view-project-view.js\";\nimport { ViewProjectController } from \"./controller/view-project-controller.js\";\nimport { ViewProjectModel } from \"./model/view-project-model.js\";\n\nconst app = new ViewProjectController(new ViewProjectModel(), new ViewProjectView());"],"names":["ViewProjectController","constructor","viewProjectModel","viewProjectView","this","model","view","init","getProjects","then","projects","onProjectListChanged","bindDeleteProject","handleDeleteProject","bindEditProject","handleEditProject","displayProjects","async","id","deleteProjectFromDB","projectData","editProject","BaseModel","baseUrl","Promise","resolve","reject","fetch","credentials","response","all","json","status","data","console","log","err","catch","tag","encodeURIComponent","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","error","file","itemObject","formData","FormData","append","ProjectBaseModel","baseModel","getList","getListItemById","deleteItem","bioObject","updateFileItemObject","updateItem","createFileItem","ViewProjectModel","super","deleteProject","fetchProjects","ViewProjectView","projectGallery","document","querySelector","project","projectId","projectTitle","projectCoverUrl","project_gallery_item","createElement","className","tabIndex","img_figure","project_poster","src","alt","appendChild","project_gallery_item_actions","list","edit_list_item","edit_button","ariaHidden","delete_list_item","delete_button","handler","addEventListener","e","target","nodeName","includes","replace","parentNode","children","gallery_item","getElementById","classList","toggle","setTimeout","remove","location","href","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}