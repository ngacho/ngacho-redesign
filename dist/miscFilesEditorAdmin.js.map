{"version":3,"file":"miscFilesEditorAdmin.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/misc-file-editor-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/misc-file-model.js","webpack://ngacho-new/./app/model/misc-file-editor-model.js","webpack://ngacho-new/./app/view/admin/misc-files/misc-file-editor-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/misc-file-editor-app.js"],"sourcesContent":["export class EditFileController {\n    \n    constructor(editFileView, editFileModel){\n        this.model = editFileModel;\n        this.view = editFileView;\n        this.init()\n    }    \n\n    init(){\n\n        this.view.bindHandlePublishFile(this.handlePublishNewFile);\n        \n    }\n\n\n    handlePublishNewFile = async (file, FileObject) => this.model.uploadNewFile(file, FileObject);\n    \n\n}\n","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class MiscFileModel{\n    constructor(){\n        this.baseModel = new BaseModel(\"https://api.ngacho.com/database/miscalleneous-files\");\n    }\n\n    async fetchMiscFiles(){\n        return this.baseModel.getList();\n    }\n\n    async fetchMiscFileById(id, serverSideRendering = false){\n        return this.baseModel.getListItemById(id, serverSideRendering);\n    }\n\n    async deleteMiscFile(id){\n        return this.baseModel.deleteItem(id);\n    }\n\n    async publishFile(file, fileObject){\n        return this.baseModel.createFileItem(file, fileObject);\n    } \n\n}","import { MiscFileModel } from \"./base-models/misc-file-model.js\";\n\nexport class EditFileModel extends MiscFileModel {\n    constructor(){\n        super();\n    }\n\n\n    async uploadNewFile(file, fileData){\n        let uploadRef = await this.publishFile(file, fileData);\n        return uploadRef;\n    }\n\n}","export class EditFileView {\n    constructor() {\n        this.add_files_wrapper = document.querySelector(\".add-files-wrapper\");\n        this.fileForm = document.querySelector(\".file-details-form\");\n\n        this.uploadImageInput = document.getElementById(\"image-upload-input\");\n        this.fileTitleInput = document.getElementById(\"file-title-input\");\n       \n\n        this.postFileButton = document.getElementById(\"post-file-button\");\n        // this.resetForm();\n        this.validate();\n\n        this.fileTitleInput.addEventListener(\"input\", ()=>{\n            this.validate();\n        })\n        \n\n    }\n\n    validate(){\n        this.postFileButton.disabled = this.fileTitleInput.value.length == 0\n    }\n\n\n    bindHandlePublishFile(handler) {\n        let imageInput = this.uploadImageInput;\n        let fileCoverFile = null;\n\n        imageInput.addEventListener(\"change\", () => {\n            if (imageInput.files && imageInput.files[0]) {\n                var reader = new FileReader();\n\n                reader.onload = function (e) {\n                    var file_cover = document.getElementById('file-cover');\n                    file_cover.setAttribute('src', e.target.result);\n\n                };\n\n                fileCoverFile = imageInput.files[0];\n                reader.readAsDataURL(fileCoverFile);\n            }\n        });\n\n        this.postFileButton.addEventListener(\"click\", ()=>{\n                var fileObject = {\n                    title : this.fileTitleInput.value,\n                    type : fileCoverFile.type\n                }\n\n\n                var status = handler(fileCoverFile, fileObject);\n                status.then((message)=>{\n                    this.resetForm();\n                }).catch((err)=>{\n                    console.log('error ' + err);\n                })\n            \n        })\n    }\n\n    \n    resetForm(){\n        this.fileForm.submit();\n        return false;\n    }\n\n\n\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { EditFileController } from \"./controller/misc-file-editor-controller.js\";\nimport { EditFileView } from \"./view/admin/misc-files/misc-file-editor-view.js\";\nimport { EditFileModel } from \"./model/misc-file-editor-model.js\";\n\nconst app = new EditFileController(new EditFileView(), new EditFileModel());"],"names":["EditFileController","constructor","editFileView","editFileModel","this","model","view","init","bindHandlePublishFile","handlePublishNewFile","async","file","FileObject","uploadNewFile","BaseModel","baseUrl","Promise","resolve","reject","fetch","credentials","then","response","all","json","status","data","console","log","err","catch","tag","encodeURIComponent","id","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","error","itemObject","formData","FormData","append","MiscFileModel","baseModel","getList","getListItemById","deleteItem","fileObject","createFileItem","EditFileModel","super","fileData","publishFile","EditFileView","add_files_wrapper","document","querySelector","fileForm","uploadImageInput","getElementById","fileTitleInput","postFileButton","validate","addEventListener","disabled","value","length","handler","imageInput","fileCoverFile","files","reader","FileReader","onload","e","setAttribute","target","result","readAsDataURL","title","type","message","resetForm","submit","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"sourceRoot":""}