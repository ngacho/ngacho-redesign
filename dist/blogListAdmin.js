/*! For license information please see blogListAdmin.js.LICENSE.txt */
(()=>{"use strict";var e={"./app/controller/blogs-to-edit-controller.js":(e,t,s)=>{s.r(t),s.d(t,{BlogsToEditController:()=>o});class o{constructor(e,t){this.model=e,this.view=t,this.init()}init(){this.model.getBlogList().then((e=>{this.onBlogListChanged(e)})),this.view.bindDeleteBlog(this.handleDeleteBlog)}onBlogListChanged=e=>{this.view.displayBlogs(e)};handleDeleteBlog=async e=>this.model.deleteBlog(e)}},"./app/model/base-models/base-model.js":(e,t,s)=>{s.r(t),s.d(t,{BaseModel:()=>o});class o{constructor(e){this.baseUrl=e}async getList(){return new Promise(((e,t)=>{fetch(this.baseUrl,{credentials:"include"}).then((s=>{Promise.all([s.json(),s.status]).then((([s,o])=>{200===o?e(s):(console.log(err),t(`Failed with response ${o}`))})).catch((e=>{console.log(e),t(`Failed response: ${e}`)}))})).catch((e=>{console.log(e),t("Failed to fetch")}))}))}async getListByTag(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/tags/${encodeURIComponent(e)}`).then((e=>{Promise.all([e.json(),e.status]).then((([e,o])=>{200===o?t(e):s(`Failed with response ${o}`)})).catch((e=>{s(`Failed response: ${e}`)}))})).catch((e=>s("Failed to fetch")))}))}async getListItemById(e,t){return new Promise(((s,o)=>{fetch(`${this.baseUrl}/${e}/${t}`,{credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,t])=>{200===t?s(e):o(`Failed with response ${t}`)})).catch((e=>{o("Failed response")}))})).catch((()=>o("Failed to fetch id")))}))}async createItem(e){const t={doc:e},s={method:"POST",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((e,t)=>{fetch(this.baseUrl,s).then((s=>{Promise.all([s.text(),s.status]).then((([s,o])=>{200===o?e("Success"):t(`Failed with response ${o}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async createFileItem(e,t){const s=new FormData;s.append("file",e),s.append("doc",JSON.stringify(t));const o={method:"POST",credentials:"include",body:s};return new Promise(((e,t)=>{fetch(this.baseUrl,o).then((s=>{Promise.all([s.text(),s.status]).then((([s,o])=>{200===o?e("Success"):t(`Failed with response ${o}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async updateFileItemObject(e,t){const s=new FormData;s.append("file",e),s.append("doc",JSON.stringify(t));const o={method:"PUT",body:s,credentials:"include"};return new Promise(((e,s)=>{fetch(`${this.baseUrl}/${t.id}`,o).then((t=>{Promise.all([t.text(),t.status]).then((([t,o])=>{200===o?e("Success"):s(`Failed with response ${o}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),s("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),s("Failed response.")}))}))}async updateItem(e){const t={doc:e},s={method:"PUT",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((t,o)=>{fetch(`${this.baseUrl}/${e.id}`,s).then((e=>{Promise.all([e.text(),e.status]).then((([e,s])=>{200===s?t("Success"):(console.error(`ERROR LEVEL 2: ${e}`),o(`Failed with response ${s}`))})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),o("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),o("Failed response.")}))}))}async updateItemStatus(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/set-active/${e}`,{method:"PUT",credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,o])=>{200===o?t("Success"):s(`Failed with response ${o}`)})).catch((e=>{s("Failed response")}))})).catch((e=>{s("Failed")}))}))}async deleteItem(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/${e}`,{method:"DELETE",credentials:"include"}).then((e=>{Promise.all([e.text(),e.status]).then((([e,o])=>{200===o?t("Success"):s(`Failed with response ${o}`)})).catch((e=>{s("Failed response")}))})).catch((e=>{s("Failed to delete text")}))}))}}},"./app/model/base-models/blog-model.js":(e,t,s)=>{s.r(t),s.d(t,{BlogModel:()=>l});var o=s("./app/model/base-models/base-model.js");class l{constructor(){this.baseModel=new o.BaseModel("https://api.ngacho.com/database/blogs")}async addBlog(e){return this.baseModel.createItem(e)}async editBlog(e){return this.baseModel.updateItem(e)}async getBlogs(){return this.baseModel.getList()}async getBlog(e,t=!1){return this.baseModel.getListItemById(e,t)}async deleteBlogById(e){return this.baseModel.deleteItem(e)}async getBlogsByTags(e){return this.baseModel.getListByTag(e)}}},"./app/model/blogs-to-edit-model.js":(e,t,s)=>{s.r(t),s.d(t,{BlogsToEditModel:()=>l});var o=s("./app/model/base-models/blog-model.js");class l extends o.BlogModel{constructor(){super(),this.blogList=[]}async getBlogList(){return await this.getBlogs()}async deleteBlog(e){return await this.deleteBlogById(e)}}},"./app/view/blog/admin/blogs-to-edit-view.js":(e,t,s)=>{s.r(t),s.d(t,{BlogsToEditView:()=>o});class o{constructor(){this.blogs_wrapper=document.querySelector(".table-body")}displayBlogs(e){if(e)for(const p of e){var t=document.createElement("tr");t.className="blog-item .new-item",t.id=p.id;var s=document.createElement("td");s.className="blog-time-cell";var o=document.createElement("time");o.className="last-edit-date";var l=p.lastModified||p.publishedAt,a=document.createTextNode(l);o.appendChild(a),s.appendChild(o);var r=document.createElement("td");r.className="blog-title-cell";var n=document.createElement("p");n.className="blog-title";var d=document.createTextNode(p.title);n.appendChild(d),r.appendChild(n),n.addEventListener("click",(function(){location.href=`/admin/edit-blog/?${p.id}`}));var i=document.createElement("td");i.className="blog-delete-icon-cell";var c=document.createElement("a"),h=document.createElement("i");h.className="fa fa-trash",h.id=`fa-fa-trash-delete-${p.id}`,h.style="color: rgba(153, 15, 2, 1)",h.ariaHidden=!0,c.appendChild(h),i.appendChild(c),t.appendChild(s),t.appendChild(r),t.appendChild(i),this.blogs_wrapper.appendChild(t)}else;}bindDeleteBlog(e){this.blogs_wrapper.addEventListener("click",(t=>{if(t.target&&"I"==t.target.nodeName){const s=t.target.id.replace("fa-fa-trash-delete-","");e(s).then((e=>{var t=document.getElementById(s);t.classList.toggle("hide"),setTimeout((()=>{for(var e=t.parentNode;e&&"TABLE"!=e.tagName;)e=e.parentNode;e&&e.deleteRow(t.rowIndex)}),1500)})).catch((e=>{console.log("Deleting blog error "+e)}))}}))}}}},t={};function s(o){var l=t[o];if(void 0!==l)return l.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,s),a.exports}s.d=(e,t)=>{for(var o in t)s.o(t,o)&&!s.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{s.r(o);var e=s("./app/controller/blogs-to-edit-controller.js"),t=s("./app/view/blog/admin/blogs-to-edit-view.js"),l=s("./app/model/blogs-to-edit-model.js");new e.BlogsToEditController(new l.BlogsToEditModel,new t.BlogsToEditView)})()})();
//# sourceMappingURL=blogListAdmin.js.map