{"version":3,"file":"projects.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/projects-list-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/projects-model.js","webpack://ngacho-new/./app/model/project-list-model.js","webpack://ngacho-new/./app/view/projects/projects-list-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/projects-list-app.js"],"sourcesContent":["\n\nexport class ProjectListController{\n \n    constructor(viewProjectModel, viewProjectView){\n        this.model = viewProjectModel;\n        this.view = viewProjectView;\n        this.init();\n    }\n\n    init(){\n        // Display initial projects\n        this.model.getProjects().then((projects) => {\n            this.onProjectListChanged(projects);\n        }).catch((err)=>{\n            console.error(\"error \" + err);\n        });\n        \n    }\n\n    onProjectListChanged = (projects) => {\n        this.view.displayProjects(projects);\n    }\n}","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class ProjectBaseModel {\n\n    constructor() { \n        this.baseModel = new BaseModel(\"https://api.ngacho.com/database/projects\");\n    }\n    \n\n\n    async fetchProjects() {\n        return this.baseModel.getList();\n        \n    }\n\n    async fetchProjectById(id, serverSideRendering = false) {\n        return this.baseModel.getListItemById(id, serverSideRendering);\n    }\n\n    async deleteProject(id){\n        return this.baseModel.deleteItem(id);\n\n    }\n\n\n    async updateProjectWithFile(file, bioObject){\n        return this.baseModel.updateFileItemObject(file, bioObject);\n    }\n\n    async updateProject(bioObject){\n        return this.baseModel.updateItem(bioObject);\n    }\n\n    async publishProject(file, bioObject){\n        return this.baseModel.createFileItem(file, bioObject);\n    }\n\n\n}","import { ProjectBaseModel } from \"./base-models/projects-model.js\";\n\nexport class ProjectListModel extends ProjectBaseModel {\n    constructor(){\n        super();\n    }\n\n    async getProjects(){\n        var projects = await this.fetchProjects();\n        return projects;\n    }\n\n    \n    \n}","\nexport class ProjectListView {\n    constructor() {\n        this.projects_carousel = document.querySelector(\".projects-carousel\");\n        this.right_click_button = document.querySelector(\".right-control\");\n        this.left_click_button = document.querySelector(\".left-control\");\n        this.right_click_button.addEventListener('click', ()=>{\n            this.scrollTowardsRight();\n        })\n        this.left_click_button.addEventListener('click', ()=>{\n            this.scrollTowardsLeft();\n        })\n        \n        this.scrollAmount = 0;\n        \n        // this.initiateCarousel();\n    }\n\n\n    displayProjects(projects) {\n        for (const project of projects) {\n            const projectId = project[\"id\"];\n            const projectTitle = projectId.substring(0, projectId.length-5);\n            \n            const projectCoverUrl = project[\"publicUrl\"];\n            const projectLangs = project[\"projectLanguages\"];\n            const projectExtraInfoLink = project[\"projectExtraInfoUrl\"];\n\n            // create the (project-card animate-entry)\n            var project_card = document.createElement('div');\n            // class name\n            project_card.className = 'project-card animate-entry';\n            //  create figure element\n            var img_figure = document.createElement('figure');\n            // create img, append src, create alt.\n            var project_poster = document.createElement('img');\n            project_poster.src = projectCoverUrl;\n            project_poster.alt = `photo of ${projectTitle}`\n            // put image in figure element\n            img_figure.appendChild(project_poster);\n\n\n            // create a section, project-details\n            var project_details = document.createElement('section');\n            project_details.className = \"project-details\";\n            // create div, min-details.\n            var minimized_details = document.createElement('div');\n            minimized_details.className = \"min-details\"\n            // create h1 block for project name, span for language.\n            var project_title = document.createElement('h1');\n            var title = document.createTextNode(projectTitle);\n            project_title.appendChild(title);\n\n            var project_language = document.createElement('span');\n            var lang = document.createTextNode(projectLangs);\n            project_language.appendChild(lang);\n\n            project_title.appendChild(project_language);\n\n            minimized_details.appendChild(project_title);\n            // create a tag class btn , with target _blank and rel noopener noreferrer \n            var learn_more = document.createElement('a');\n            learn_more.className = \"btn\";\n            // text is learn more.\n            var learn_more_prompt = document.createTextNode(\"Learn More\");\n            learn_more.href = projectExtraInfoLink;\n            learn_more.target = \"_blank\";\n            learn_more.rel = \"noopener noreferrer\"\n\n            learn_more.appendChild(learn_more_prompt);\n            project_details.appendChild(minimized_details);\n            project_details.appendChild(learn_more);\n\n\n\n            // put everything in project card.\n            project_card.appendChild(img_figure);\n            project_card.appendChild(project_details);\n\n            // add to carousel\n            this.projects_carousel.appendChild(project_card);\n        }\n    }\n\n    scrollTowardsLeft() {\n        // add width of the card + one of the margins.\n        var project_card = document.querySelector(\".project-card\");\n        var style = project_card.currentStyle || window.getComputedStyle(project_card);\n\n        var scrollPerClick = project_card.clientWidth + parseFloat(style.marginRight) + parseFloat(style.marginLeft);\n\n        this.projects_carousel.scrollTo({\n            top: 0,\n            left: (this.scrollAmount -= scrollPerClick),\n            behavior: \"smooth\"\n        });\n\n        if (this.scrollAmount < 0) scrollAmount = 0;\n    }\n\n    scrollTowardsRight() {\n        var project_card = document.querySelector(\".project-card\");\n        var style = project_card.currentStyle || window.getComputedStyle(project_card);\n\n        // add width of the card + one of the margins.\n        var scrollPerClick = project_card.clientWidth + parseFloat(style.marginRight) + parseFloat(style.marginLeft);\n\n        if (this.scrollAmount <= this.projects_carousel.scrollWidth - this.projects_carousel.clientWidth) {\n            this.projects_carousel.scrollTo({\n                top: 0,\n                left: (this.scrollAmount += scrollPerClick),\n                behavior: \"smooth\"\n            })\n        }\n    }\n\n\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ProjectListView } from \"./view/projects/projects-list-view.js\";\nimport { ProjectListController } from \"./controller/projects-list-controller.js\";\nimport { ProjectListModel } from \"./model/project-list-model.js\";\n\nconst app = new ProjectListController(new ProjectListModel(), new ProjectListView());"],"names":["ProjectListController","constructor","viewProjectModel","viewProjectView","this","model","view","init","getProjects","then","projects","onProjectListChanged","catch","err","console","error","displayProjects","BaseModel","baseUrl","async","Promise","resolve","reject","fetch","credentials","response","all","json","status","data","log","tag","encodeURIComponent","id","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","file","itemObject","formData","FormData","append","ProjectBaseModel","baseModel","getList","getListItemById","deleteItem","bioObject","updateFileItemObject","updateItem","createFileItem","ProjectListModel","super","fetchProjects","ProjectListView","projects_carousel","document","querySelector","right_click_button","left_click_button","addEventListener","scrollTowardsRight","scrollTowardsLeft","scrollAmount","project","projectId","projectTitle","substring","length","projectCoverUrl","projectLangs","projectExtraInfoLink","project_card","createElement","className","img_figure","project_poster","src","alt","appendChild","project_details","minimized_details","project_title","title","createTextNode","project_language","lang","learn_more","learn_more_prompt","href","target","rel","style","currentStyle","window","getComputedStyle","scrollPerClick","clientWidth","parseFloat","marginRight","marginLeft","scrollTo","top","left","behavior","scrollWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}