{"version":3,"file":"miscFilesListAdmin.js","mappings":"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","sources":["webpack://ngacho-new/./app/controller/misc-file-list-controller.js","webpack://ngacho-new/./app/model/base-models/base-model.js","webpack://ngacho-new/./app/model/base-models/misc-file-model.js","webpack://ngacho-new/./app/model/misc-file-list-model.js","webpack://ngacho-new/./app/view/admin/misc-files/misc-file-list-view.js","webpack://ngacho-new/webpack/bootstrap","webpack://ngacho-new/webpack/runtime/define property getters","webpack://ngacho-new/webpack/runtime/hasOwnProperty shorthand","webpack://ngacho-new/webpack/runtime/make namespace object","webpack://ngacho-new/./app/misc-file-list-app.js"],"sourcesContent":["export class MiscFileListController{\n    constructor(miscFileListView, miscFileListModel){\n        this.view = miscFileListView;\n        this.model = miscFileListModel;\n        this.init();\n    }\n\n    init(){\n        this.fetchMiscFiles();\n        this.view.bindCopyFileUrl(this.handleGetFileById);\n        this.view.bindDeleteFile(this.handleDeleteFile);\n    }\n\n\n    fetchMiscFiles(){\n        this.model.getMiscFilesFromDb().then((data) => {\n            this.view.renderMiscFiles(data);\n        }).catch((errMessage) => console.log(errMessage));\n    }\n\n    handleGetFileById = async (id) => this.model.getMiscFilesFromDbById(id);\n    handleDeleteFile = async (id) => this.model.deleteMiscFileFromDb(id);\n}","export class BaseModel{\n    constructor(baseUrl){\n        this.baseUrl = baseUrl;\n\n    }\n\n\n    /**\n     * \n     * @returns {Promise with array of objects}\n     */\n    async getList(){\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, {credentials: 'include'})\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                console.log(err);\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            console.log(err);\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => {\n                    console.log(err);\n                    reject(\"Failed to fetch\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {a tag in series} tag \n     * @returns promise of array of objects\n     */\n    async getListByTag(tag){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/tags/${encodeURIComponent(tag)}`)\n                .then(response => {\n                    // Process the response body and status code simultaneously\n                    Promise.all([response.json(), response.status])\n                        .then(([data, status]) => {\n                            if (status === 200) {\n                                resolve(data);\n                            } else {\n                                reject(`Failed with response ${status}`)\n                            }\n                        }).catch((err) => {\n                            reject(`Failed response: ${err}`);\n                        });\n                }).catch((err) => reject(\"Failed to fetch\"));\n        });\n    }\n\n\n    /**\n     * \n     * @param {object id} id \n     * @returns promise of single object\n     */\n    async getListItemById(id, serverSideRendering){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}/${serverSideRendering}`, {credentials: 'include'}).then((response) => {\n                Promise.all([response.json(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(data);\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\")\n                    });\n\n            }).catch(() => reject(\"Failed to fetch id\"))\n        });\n    }\n\n    /**\n     * \n     * @param {item we want to create} contents \n     * @returns status of item creation\n     */\n    async createItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        };\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n    }\n\n    /**\n     * \n     * @param {file we want to upload} file \n     * @param {any data associated with the file} itemObject \n     * @returns \n     */\n    async createFileItem(file, itemObject){\n        \n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(itemObject));\n\n\n        const requestOptions = {\n            method: 'POST',\n            credentials: 'include',\n            body: formData\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(this.baseUrl, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n        \n\n\n    }\n\n    /**\n     * \n     * @param {file object we want to update} file \n     * @param {data object for metadata of the file} contents \n     * @returns the status of the update\n     */\n    async updateFileItemObject(file, contents){\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('doc', JSON.stringify(contents));\n\n\n        const requestOptions = {\n            method: 'PUT',\n            body: formData,\n            credentials: 'include'\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`);\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {data object of item to be update} contents \n     * @returns status of updated item\n     */\n    async updateItem(contents){\n        const payload = {\n            doc: contents\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            credentials: 'include',\n            body: JSON.stringify(payload)\n        }\n\n\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${contents['id']}`, requestOptions).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([response, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            console.error(`ERROR LEVEL 2: ${response}`);\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        console.error(`ERROR LEVEL 2: ${err}`);\n                        reject(\"Failed response\");\n                    });\n            }).catch((err) => {\n                console.error(`ERROR LEVEL 1: ${err}`)\n                reject(\"Failed response.\")\n            });\n        });\n\n    }\n\n    /**\n     * used for activating and deactivating items\n     * @param {id of item we want to update} id \n     * @returns status of update\n     */\n    async updateItemStatus(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/set-active/${id}`, {\n                method: 'PUT',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.json(), response.status])\n                    .then(([_, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed\");\n            });\n        });\n\n    }\n\n    /**\n     * \n     * @param {id of item to be deleted} id \n     * @returns \n     */\n    async deleteItem(id){\n        return new Promise((resolve, reject) => {\n            fetch(`${this.baseUrl}/${id}`, {\n                method: 'DELETE',\n                credentials: 'include'\n            }).then(response => {\n                // Process the response body and status code simultaneously\n                Promise.all([response.text(), response.status])\n                    .then(([data, status]) => {\n                        if (status === 200) {\n                            resolve(\"Success\");\n                        } else {\n                            reject(`Failed with response ${status}`)\n                        }\n                    }).catch((err) => {\n                        reject(\"Failed response\");\n                    });\n            }).catch((_) => {\n                reject(\"Failed to delete text\")\n            });\n        });\n\n    }\n\n    \n\n    \n}","import { BaseModel } from \"./base-model.js\";\n\nexport class MiscFileModel{\n    constructor(){\n        this.baseModel = new BaseModel(\"https://api.ngacho.com/database/miscalleneous-files\");\n    }\n\n    async fetchMiscFiles(){\n        return this.baseModel.getList();\n    }\n\n    async fetchMiscFileById(id, serverSideRendering = false){\n        return this.baseModel.getListItemById(id, serverSideRendering);\n    }\n\n    async deleteMiscFile(id){\n        return this.baseModel.deleteItem(id);\n    }\n\n    async publishFile(file, fileObject){\n        return this.baseModel.createFileItem(file, fileObject);\n    } \n\n}","import { MiscFileModel } from \"./base-models/misc-file-model.js\";\n\nexport class MiscFileListModel extends MiscFileModel{\n    constructor(){\n        super();\n    }\n\n\n    getMiscFilesFromDb(){\n        const miscFilesRef = this.fetchMiscFiles();\n        return miscFilesRef;\n    }\n\n    getMiscFilesFromDbById(id){\n        const miscFileRef = this.fetchMiscFileById(id);\n        return miscFileRef;\n    }\n\n    deleteMiscFileFromDb(id){\n        const deleteRef = this.deleteMiscFile(id);\n        return deleteRef;\n    }\n\n}","\nexport class MiscFileListView{\n\n    constructor(){\n        this.miscFileGallery = document.querySelector(\".files-gallery\");\n    }\n\n    renderMiscFiles(files){\n        for (const file of files) {\n            const fileId = file[\"id\"];\n            const fileTitle = file[\"title\"];\n            // const fileCoverUrl = file[\"publicUrl\"];\n            const fileType = file['type'];\n            const fileCoverUrl =  fileType === 'image/jpeg' ? file['publicUrl'] : \"https://www.freeiconspng.com/uploads/document-icon-14.png\";\n\n            // create the parent item\n            var file_gallery_item = document.createElement('div');\n            file_gallery_item.id = fileId;\n            file_gallery_item.className = 'file-gallery-item';\n            file_gallery_item.tabIndex = 0;\n\n            //  create figure element\n            var img_figure = document.createElement('figure');\n            // create img, append src, create alt.\n            var file_poster = document.createElement('img');\n            file_poster.className = \"file-gallery-image\"\n            file_poster.src = fileCoverUrl;\n            file_poster.alt = `${fileTitle} file`\n            // put image in figure element\n            img_figure.appendChild(file_poster);\n\n            // create text node\n            let textItem = document.createElement('p');\n            textItem.className = \"file-gallery-item-text\"\n            let textNode = document.createTextNode(fileTitle);\n            textItem.appendChild(textNode);\n\n            \n\n            // create the actions div\n            var file_gallery_item_actions = document.createElement('div');\n            file_gallery_item_actions.className = \"file-gallery-item-actions\";\n            \n\n            // create the actions as an unordered list\n            var list = document.createElement('ul');\n            \n            var copy_list_item = document.createElement('li');\n            copy_list_item.className = \"file-gallery-item-copy\"\n\n            var copy_url_button = document.createElement('i');\n            \n            copy_url_button.className = `fas fa-copy ${file['fileCoverTitle']}`\n            copy_url_button.id = `copy ${fileId}`;\n            copy_url_button.ariaHidden = true;\n            copy_list_item.appendChild(copy_url_button);\n\n            var delete_list_item = document.createElement('li');\n            delete_list_item.className = \"file-gallery-item-delete\"\n            \n\n            var delete_button = document.createElement('i');\n            delete_button.className = `fas fa-trash ${file['fileCoverTitle']}`;\n            delete_button.id = `delete ${fileId}`;\n            delete_button.ariaHidden = true;\n            delete_list_item.appendChild(delete_button);\n\n            list.appendChild(copy_list_item);\n            list.appendChild(delete_list_item);\n\n\n            file_gallery_item_actions.appendChild(list);\n            file_gallery_item.appendChild(img_figure);\n            file_gallery_item.appendChild(file_gallery_item_actions);\n            file_gallery_item.appendChild(textItem);\n            this.miscFileGallery.appendChild(file_gallery_item);\n\n            \n\n        \n        }\n\n    }\n\n\n    bindDeleteFile(handler) {\n\n        this.miscFileGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes(\"fas fa-trash\")) {\n                const fileId = e.target.id.replace(\"delete \", '');\n\n                var deleteStatus = handler(fileId);\n                deleteStatus.then((_)=>{\n                    const gallery_item = document.getElementById(fileId);\n                    gallery_item.classList.toggle('hide');\n                    setTimeout(() => {\n                        // remove the item after timeout.\n                        gallery_item.remove();\n                        \n                    }, 1500);\n                    console.log(\"deleted successfully\")\n                }).catch((err)=>{\n                    console.log(\"Failed to delete\");\n                    console.log(err);\n\n                })\n                \n            }\n        });\n\n    }\n\n    bindCopyFileUrl(handler){\n        this.miscFileGallery.addEventListener('click', e => {\n            if (e.target && e.target.nodeName == 'I' && e.target.className.includes(\"fas fa-copy \")) {\n                const fileId = e.target.id.replace(\"copy \", '');\n                console.log(`copying ${fileId}`);\n\n                var status = handler(fileId);\n                status.then((data)=>{\n                    console.log(data['publicUrl']);\n                }).catch((err)=>{\n                    console.log(err);\n                });\n            }\n        });\n    }\n    \n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { MiscFileListController } from \"./controller/misc-file-list-controller.js\";\nimport { MiscFileListModel } from \"./model/misc-file-list-model.js\";\nimport { MiscFileListView } from \"./view/admin/misc-files/misc-file-list-view.js\";\n\n\nconst app = new MiscFileListController(new MiscFileListView(), new MiscFileListModel());"],"names":["MiscFileListController","constructor","miscFileListView","miscFileListModel","this","view","model","init","fetchMiscFiles","bindCopyFileUrl","handleGetFileById","bindDeleteFile","handleDeleteFile","getMiscFilesFromDb","then","data","renderMiscFiles","catch","errMessage","console","log","async","id","getMiscFilesFromDbById","deleteMiscFileFromDb","BaseModel","baseUrl","Promise","resolve","reject","fetch","credentials","response","all","json","status","err","tag","encodeURIComponent","serverSideRendering","contents","payload","doc","requestOptions","method","headers","Headers","body","JSON","stringify","text","_","error","file","itemObject","formData","FormData","append","MiscFileModel","baseModel","getList","getListItemById","deleteItem","fileObject","createFileItem","MiscFileListModel","super","fetchMiscFileById","deleteMiscFile","MiscFileListView","miscFileGallery","document","querySelector","files","fileId","fileTitle","fileCoverUrl","file_gallery_item","createElement","className","tabIndex","img_figure","file_poster","src","alt","appendChild","textItem","textNode","createTextNode","file_gallery_item_actions","list","copy_list_item","copy_url_button","ariaHidden","delete_list_item","delete_button","handler","addEventListener","e","target","nodeName","includes","replace","gallery_item","getElementById","classList","toggle","setTimeout","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"sourceRoot":""}