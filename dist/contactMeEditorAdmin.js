/*! For license information please see contactMeEditorAdmin.js.LICENSE.txt */
(()=>{"use strict";var e={"./app/controller/edit-contact-me-controller.js":(e,t,s)=>{s.r(t),s.d(t,{EditContactMeController:()=>a});class a{constructor(e,t){this.model=e,this.view=t,this.contactMeId="",this.init()}init(){let e=decodeURI(location.search);this.contactMeId=e.slice(1),this.contactMeId?(this.fetchContactMe(this.contactMeId),this.view.bindHandlePublishContactMe(this.handlePublishUpdatedContactMe)):this.view.bindHandlePublishContactMe(this.handlePublishNewContactMe)}handlePublishNewContactMe=async e=>this.model.uploadContactMe(e);handlePublishUpdatedContactMe=async e=>this.model.updateContactMe(e);fetchContactMe(e){this.model.fetchContactMeFromDb(e).then((e=>this.view.setUpContactMe(e))).catch((e=>console.log(e)))}}},"./app/model/base-models/base-model.js":(e,t,s)=>{s.r(t),s.d(t,{BaseModel:()=>a});class a{constructor(e){this.baseUrl=e}async getList(){return new Promise(((e,t)=>{fetch(this.baseUrl,{credentials:"include"}).then((s=>{Promise.all([s.json(),s.status]).then((([s,a])=>{200===a?e(s):(console.log(err),t(`Failed with response ${a}`))})).catch((e=>{console.log(e),t(`Failed response: ${e}`)}))})).catch((e=>{console.log(e),t("Failed to fetch")}))}))}async getListByTag(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/tags/${encodeURIComponent(e)}`).then((e=>{Promise.all([e.json(),e.status]).then((([e,a])=>{200===a?t(e):s(`Failed with response ${a}`)})).catch((e=>{s(`Failed response: ${e}`)}))})).catch((e=>s("Failed to fetch")))}))}async getListItemById(e,t){return new Promise(((s,a)=>{fetch(`${this.baseUrl}/${e}/${t}`,{credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,t])=>{200===t?s(e):a(`Failed with response ${t}`)})).catch((e=>{a("Failed response")}))})).catch((()=>a("Failed to fetch id")))}))}async createItem(e){const t={doc:e},s={method:"POST",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((e,t)=>{fetch(this.baseUrl,s).then((s=>{Promise.all([s.text(),s.status]).then((([s,a])=>{200===a?e("Success"):t(`Failed with response ${a}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async createFileItem(e,t){const s=new FormData;s.append("file",e),s.append("doc",JSON.stringify(t));const a={method:"POST",credentials:"include",body:s};return new Promise(((e,t)=>{fetch(this.baseUrl,a).then((s=>{Promise.all([s.text(),s.status]).then((([s,a])=>{200===a?e("Success"):t(`Failed with response ${a}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),t("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),t("Failed response.")}))}))}async updateFileItemObject(e,t){const s=new FormData;s.append("file",e),s.append("doc",JSON.stringify(t));const a={method:"PUT",body:s,credentials:"include"};return new Promise(((e,s)=>{fetch(`${this.baseUrl}/${t.id}`,a).then((t=>{Promise.all([t.text(),t.status]).then((([t,a])=>{200===a?e("Success"):s(`Failed with response ${a}`)})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),s("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),s("Failed response.")}))}))}async updateItem(e){const t={doc:e},s={method:"PUT",headers:new Headers({"Content-Type":"application/json"}),credentials:"include",body:JSON.stringify(t)};return new Promise(((t,a)=>{fetch(`${this.baseUrl}/${e.id}`,s).then((e=>{Promise.all([e.text(),e.status]).then((([e,s])=>{200===s?t("Success"):(console.error(`ERROR LEVEL 2: ${e}`),a(`Failed with response ${s}`))})).catch((e=>{console.error(`ERROR LEVEL 2: ${e}`),a("Failed response")}))})).catch((e=>{console.error(`ERROR LEVEL 1: ${e}`),a("Failed response.")}))}))}async updateItemStatus(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/set-active/${e}`,{method:"PUT",credentials:"include"}).then((e=>{Promise.all([e.json(),e.status]).then((([e,a])=>{200===a?t("Success"):s(`Failed with response ${a}`)})).catch((e=>{s("Failed response")}))})).catch((e=>{s("Failed")}))}))}async deleteItem(e){return new Promise(((t,s)=>{fetch(`${this.baseUrl}/${e}`,{method:"DELETE",credentials:"include"}).then((e=>{Promise.all([e.text(),e.status]).then((([e,a])=>{200===a?t("Success"):s(`Failed with response ${a}`)})).catch((e=>{s("Failed response")}))})).catch((e=>{s("Failed to delete text")}))}))}}},"./app/model/base-models/contact-me-model.js":(e,t,s)=>{s.r(t),s.d(t,{ContactMeModel:()=>n});var a=s("./app/model/base-models/base-model.js");class n{constructor(){this.baseModel=new a.BaseModel("https://api.ngacho.com/database/contact-me-texts")}async fetchContactMeList(){return this.baseModel.getList()}async fetchActiveContactMe(){let e=await this.baseModel.getList();return new Promise(((t,s)=>{let a=e.filter((e=>!0===e.active));a.length>0?t(a[0]):s("No active contact me found")}))}async fetchContactMe(e,t=!1){return this.baseModel.getListItemById(e,t)}async updateContactMeStatus(e){return this.baseModel.updateItemStatus(e)}async deleteContactMeText(e){return this.baseModel.deleteItem(e)}async updateContactMeText(e){return this.baseModel.updateItem(e)}async postContactMeText(e){return this.baseModel.createItem(e)}}},"./app/model/edit-contact-me-model.js":(e,t,s)=>{s.r(t),s.d(t,{EditContactMeModel:()=>n});var a=s("./app/model/base-models/contact-me-model.js");class n extends a.ContactMeModel{constructor(){super()}async uploadContactMe(e){return await this.postContactMeText(e)}async updateContactMe(e){return await this.updateContactMeText(e)}async fetchContactMeFromDb(e){return await this.fetchContactMe(e)}}},"./app/view/contact-me/admin/edit-contact-me-view.js":(e,t,s)=>{s.r(t),s.d(t,{EditContactMeView:()=>a});class a{constructor(){this.contactMeForm=document.querySelector(".contactme-details-form"),this.contactMeTitleInput=document.getElementById("contactme-title-input"),this.contactMeTextInput=document.getElementById("contactme-text-input"),this.postContactMeButton=document.getElementById("post-contactme-button"),this.validate(),this.contactMeTitleInput.addEventListener("input",(()=>{this.validate()})),this.contactMeTextInput.addEventListener("input",(()=>{this.validate()}))}setUpContactMe(e){this.contactMeTitleInput.value=e.title,this.contactMeTextInput.value=e.text,this.validate()}validate(){0!=this.contactMeTitleInput.value.length&&0!=this.contactMeTextInput.value.length?this.postContactMeButton.disabled=!1:this.postContactMeButton.disabled=!0}bindHandlePublishContactMe(e){this.postContactMeButton.addEventListener("click",(()=>{let t=decodeURI(location.search).slice(1);const s=t?{id:t,title:this.contactMeTitleInput.value,text:this.contactMeTextInput.value,active:!1}:{title:this.contactMeTitleInput.value,text:this.contactMeTextInput.value,active:!1};e(s).then((e=>{this.resetForm()})).catch((e=>{console.error(e)}))}))}resetForm(){return this.contactMeForm.submit(),!1}}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,s),o.exports}s.d=(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};(()=>{s.r(a);var e=s("./app/controller/edit-contact-me-controller.js"),t=s("./app/model/edit-contact-me-model.js"),n=s("./app/view/contact-me/admin/edit-contact-me-view.js");new e.EditContactMeController(new t.EditContactMeModel,new n.EditContactMeView)})()})();
//# sourceMappingURL=contactMeEditorAdmin.js.map